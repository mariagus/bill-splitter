{"version":3,"sources":["App.js","functions.js","reportWebVitals.js","index.js"],"names":["App","useState","input","setInput","resultM","setResultM","resultB","setResultB","handleSplit","e","amount","preventDefault","String","Math","round","calculateB","className","type","placeholder","onChange","target","value","onClick","style","margin","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8MAmCeA,MA/Bf,WAAgB,IAAD,EACaC,mBAAS,IADtB,mBACNC,EADM,KACCC,EADD,OAEiBF,mBAAS,IAF1B,mBAENG,EAFM,KAEGC,EAFH,OAGiBJ,mBAAS,IAH1B,mBAGNK,EAHM,KAGGC,EAHH,KAKPC,EAAc,SAACC,GCLJ,IAACC,EDMhBD,EAAEE,iBACFN,GCPgBK,EDOMR,ECNjBU,OAAOC,KAAKC,MAAe,KAATJ,MDOvBH,ECZe,SAACG,GAClB,OAAOE,OAAOC,KAAKC,MAAe,KAATJ,IDWZK,CAAWb,KAExB,OACE,sBAAKc,UAAU,MAAf,UACE,+CACA,iCACE,uBACEC,KAAK,OACLC,YAAY,eACZC,SAAU,SAACV,GAAD,OAAON,EAASM,EAAEW,OAAOC,UAErC,qBAAKL,UAAU,QAAf,SACE,wBAAQM,QAAS,SAACb,GAAD,OAAOD,EAAYC,IAApC,wBAGJ,sBAAKO,UAAU,SAAf,UACE,qBAAIO,MAAO,CAAEC,OAAQ,QAArB,gBAAmCpB,KACnC,qBAAImB,MAAO,CAAEC,OAAQ,QAArB,gBAAmClB,YEjB5BmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.fa2810b6.chunk.js","sourcesContent":["import \"./App.css\";\nimport { useState } from \"react\";\nimport { calculateB, calculateM } from \"./functions\";\n\nfunction App() {\n  const [input, setInput] = useState(\"\");\n  const [resultM, setResultM] = useState(\"\");\n  const [resultB, setResultB] = useState(\"\");\n\n  const handleSplit = (e) => {\n    e.preventDefault();\n    setResultM(calculateM(input));\n    setResultB(calculateB(input));\n  };\n  return (\n    <div className=\"App\">\n      <h1>BILL SPLITTER</h1>\n      <form>\n        <input\n          type=\"text\"\n          placeholder=\"enter amount\"\n          onChange={(e) => setInput(e.target.value)}\n        />\n        <div className=\"split\">\n          <button onClick={(e) => handleSplit(e)}>SPLIT</button>\n        </div>\n      </form>\n      <div className=\"result\">\n        <h2 style={{ margin: \"2rem\" }}>M: {resultM}</h2>\n        <h2 style={{ margin: \"2rem\" }}>B: {resultB}</h2>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const calculateB = (amount) => {\n  return String(Math.round(amount * 0.616));\n};\n\nconst calculateM = (amount) => {\n  return String(Math.round(amount * 0.384));\n};\n\nexport { calculateB, calculateM };\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}